class Solution {
     int dfs(vector<vector<int>>& grid, int x, int y){
        if(x < 0 || x == grid.size() || y < 0 || y == grid[0].size() || grid[x][y] == 0){
            return 0;
        }
        grid[x][y] = 0;
        int dx[4] = {1, 0, -1, 0};
        int dy[4] = {0, 1, 0, -1};
        int res = 1;
        for(int i = 0; i < 4; i++){
            res += dfs(grid, x + dx[i], y + dy[i]);
        } 
        return res;
    }

public:     
    int maxAreaOfIsland(vector<vector<int>>& grid) {
        int res = 0;
        for(int i = 0; i < grid.size(); i++){
            for(int j = 0; j < grid[0].size(); j++){
                res = max(res, dfs(grid, i, j));
            }
        }
        return res;
    }
};
